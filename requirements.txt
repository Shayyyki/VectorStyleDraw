ftfy==6.0.3
cssutils==2.3.0
gdown==4.4.0
imageio==2.9.0
imageio-ffmpeg==0.4.4
importlib-metadata==4.6.4
ipykernel==6.1.0
ipython==7.26.0
ipython-genutils==0.2.0
json5==0.9.5
jsonpatch==1.32
jsonpointer==2.1
jsonschema==3.2.0
jupyter-client==6.1.12
jupyter-core==4.7.1
jupyter-server==1.10.2
jupyterlab==3.1.6
jupyterlab-pygments==0.1.2
jupyterlab-server==2.7.0
matplotlib==3.4.2
matplotlib-inline==0.1.2
moviepy==1.0.3
notebook==6.4.3
numba==0.53.1
numpy==1.20.3
nvidia-ml-py3==7.352.0
opencv-python==4.5.3.56
pandas==1.3.2
pathtools==0.1.2
Pillow==8.2.0
pip==21.2.2
plotly==5.2.1
psutil==5.8.0
ptyprocess==0.7.0
pyaml==21.8.3
regex==2021.11.10
scikit-image==0.18.1
scikit-learn==1.0.2
scipy==1.6.2
seaborn==0.11.2
subprocess32==3.5.4
svgpathtools==1.4.1
svgwrite==1.4.1
torch==1.7.1
torch-tools==0.1.5
torchfile==0.1.0
torchvision==0.8.2
tqdm==4.62.1
visdom==0.1.8.9
wandb==0.12.0
webencodings==0.5.1
websocket-client==0.57.0
zipp==3.5.0


  #第一层
    print('layer:', 1)
    canvas_width, canvas_height, shapes, shape_groups = \
        pydiffvg.svg_to_scene(args.svg)
    scene_args_c = pydiffvg.RenderFunction.serialize_scene( \
        canvas_width, canvas_height, shapes, shape_groups)

    render = pydiffvg.RenderFunction.apply
    img1 = render(canvas_width, canvas_height, 2, 2, 0, None, *scene_args_c)
    img1 = img1[:, :, 3:4] * img1[:, :, :3] + torch.ones(img1.shape[0], img1.shape[1], 3, device=pydiffvg.get_device()) * (
            1 - img1[:, :, 3:4])
    pydiffvg.imwrite(img1.cpu(), './content/{}_num{}/layer1.png'.format(image_name, 0),gamma=1.0)
    img1 = img1[:, :, :3]
    img1 = img1.unsqueeze(0)
    img1 = img1.permute(0, 3, 1, 2)  # NHWC -> NCHW

